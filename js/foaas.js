// Generated by CoffeeScript 1.7.1
(function() {
  var check_params, fuckoff_request, get_url, http;

  http = require('http');


  /*
   * Test the params
   */

  check_params = function() {
    var usage;
    if ((process.argv[2] == null) || (process.argv[3] == null)) {
      usage = "Usage 1: foaas message argument 1 [argument 2] \n" + "Usage 2: foaas argument 1 argument 2 \n\n" + "foaas off :name :from \n" + "foaas you :name :from \n" + "foaas this :from \n" + "foaas that :from \n" + "foaas everything :from \n" + "foaas everyone :from \n" + "foaas donut :name :from \n" + "foaas shakespeare :name :from \n" + "foaas linus :name :from \n" + "foaas king :name :from \n" + "foaas pink :from \n" + "foaas life :from \n" + "foaas chainsaw :name :from \n" + "foaas :thing :from \n" + "foaas thanks :from \n" + "foaas flying :from \n" + "foaas fascinating :from \n";
      console.info(usage);
      return process.exit(0);
    }
  };


  /*
   * Get the path url, based on the command line parameters
   * @param {Array} params lista de par√¢metros passados para o script
   */

  get_url = function(params) {
    var p, url, _i, _len;
    url = "";
    for (_i = 0, _len = params.length; _i < _len; _i++) {
      p = params[_i];
      url += "/" + (encodeURIComponent(p));
    }
    return url;
  };


  /*
   * Do a request do service_host and return the Fuck Off message
   * @param {String} service_host where do request
   * @return {String}
   */

  fuckoff_request = function(service_host) {
    var options;
    if (service_host == null) {
      service_host = "foaas.com";
    }
    check_params();
    options = {
      host: service_host,
      port: 80,
      path: get_url(process.argv.slice(2)),
      method: 'GET'
    };
    return http.request(options, function(res) {
      res.setEncoding('utf8');
      return res.on('data', function(data) {
        return console.log(data);
      });
    }).on('error', function(e) {
      return console.error(e.message);
    }).end();
  };

  module.exports = fuckoff_request;

}).call(this);
